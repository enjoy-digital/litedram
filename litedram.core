CAPI=2:

name : enjoy-digital:litex:litedram:0.1

generators:
  litedram:
    interpreter: python
    command: examples/litedram_fusesoc_gen.py
    description : Create a parametrized LiteDRAM core
    usage: |
      The LiteDRAM generator creates a verilog instantiation of the LiteDRAM
      core together with the initialization firmware.

      Note: vexriscv is the only supported CPU for now

      Parameters:
        cpu (str):              Type of CPU used for init/calib (vexriscv, lm32)
        speedgrade (int):       FPGA speedgrade
        memtype (str):          DRAM type ("DDR"/"DDR3")

        # PHY ----------------------------------------------------------------------
        cmd_delay (int):        Command additional delay (in taps)
        cmd_latency (int):      Command additional latency
        sdram_module (str):     SDRAM modules of the board or SO-DIMM (e.g. "MT47H64M16")
        sdram_module_nb (int):  Number of byte groups
        sdram_rank_nb (int):    Number of ranks
        sdram_phy (str):        Type of FPGA PHY (e.g. "A7DDRPHY")

        # Frequency ----------------------------------------------------------------
        input_clk_freq (int):   Input clock frequency (Hz)
        sys_clk_freq (int):     System clock frequency (Hz) (DDR_clk = 4 x sys_clk)
        iodelay_clk_freq (int): IODELAYs reference clock frequency (Hz)

        # Core -----------------------------------------------------------------
        cmd_buffer_depth (int):    Depth of the command buffer

        # User Ports -----------------------------------------------------------
        user_ports_nb (int):       Number of user ports
        user_ports_type (str):     Type of ports (axi, native)
        user_ports_id_width (int): AXI identifier width

        # CSR Port -------------------------------------------------------------
        expose_csr_port (str): expose access to CSR (I/O) ports ("yes"/"no")
