name: ci

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        pytest_args:
          - 'test                -k "not Verilator"'
          - 'test/test_lpddr4.py -k "Verilator"'
          - 'test/test_lpddr5.py -k "Verilator"'
          - 'test/test_ddr5.py   -k "Verilator"'
    steps:
      # Checkout Repository
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup CCache
        uses: hendrikmuhs/ccache-action@v1

      # Install Tools
      - name: Install Tools
        run: |
          sudo apt-get update
          sudo apt-get install wget build-essential python3 ninja-build -y
          sudo apt-get install libevent-dev libjson-c-dev flex bison git -y
          sudo apt-get install libfl-dev libfl2 zlib1g-dev python3-pip autoconf -y
          pip3 install setuptools
          pip3 install requests
          pip3 install pexpect
          pip3 install meson
          pip3 install pytest==7.1.0
      - name: Install pytest-parallel
        if: ${{ contains(matrix.pytest_args, 'not') }}
        run: pip install pytest-parallel

      # Install (n)Migen / LiteX / Cores
      - name: Install LiteX
        run: |
          wget https://raw.githubusercontent.com/enjoy-digital/litex/master/litex_setup.py
          python3 litex_setup.py init install --user
          # temporary hack until merged to master
          git -C ../litex remote add antmicro https://github.com/antmicro/litex.git
          git -C ../litex fetch antmicro
          git -C ../litex checkout antmicro/mdudek/liblitedram_ddr5support

      # Install RISC-V GCC
      - name: Install RISC-V GCC
        run: |
          wget https://raw.githubusercontent.com/enjoy-digital/litex/master/litex_setup.py
          python3 litex_setup.py gcc
          sudo mkdir /usr/local/riscv
          sudo cp -r $PWD/../riscv64-*/* /usr/local/riscv

      - name: Build Verilator
        if: ${{ !contains(matrix.pytest_args, 'not') }}
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          git clone https://github.com/verilator/verilator
          cd verilator
          autoconf
          ./configure
          make -j$(nproc)
          sudo make install

      # Install Project
      - name: Install Project
        run: python3 setup.py develop --user

      # Test
      - name: Run Tests
        if: ${{ contains(matrix.pytest_args, 'not') }}
        run: |
          export PATH=/usr/local/riscv/bin:$PATH
          pytest ${{ matrix.pytest_args }} --verbose --workers auto

      - name: Run Tests
        if: ${{ !contains(matrix.pytest_args, 'not') }}
        run: |
          export PATH=/usr/local/riscv/bin:$PATH
          pytest ${{ matrix.pytest_args }} --verbose
